/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoDatos.PropiedadData;
import AccesoDatos.PropietarioData;
import Entidades.Propietario;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalema
 */
public class GestionPropietarios extends javax.swing.JInternalFrame {

    public DefaultTableModel modeloProp = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    PropietarioData abmPropietario = new PropietarioData();
    Propietario temp = null;
    List<Propietario> listado = new ArrayList();

    /**
     * Creates new form GestionPropietarios
     */
    public GestionPropietarios() {
        initComponents();
        this.setLocation(100, 100);
        armarTabla();
        camposIniciales();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanelPropietario = new javax.swing.JPanel();
        jTPropietarioDNI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaBusquedaPropietario = new javax.swing.JTable();
        jTPropietarioNombre = new javax.swing.JTextField();
        jTPropietarioApellido = new javax.swing.JTextField();
        jTPropietarioDomicilio = new javax.swing.JTextField();
        jTPropietarioTelefono = new javax.swing.JTextField();
        jbtAgregarProp = new javax.swing.JButton();
        jbtModificarProp = new javax.swing.JButton();
        jbtCancelarProp = new javax.swing.JButton();
        jlabelDNI = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("GESTIÓN PROPIETARIOS");

        jPanelPropietario.setBackground(new java.awt.Color(232, 243, 255));

        jTPropietarioDNI.setForeground(new java.awt.Color(204, 204, 204));
        jTPropietarioDNI.setText("Ingrese DNI");
        jTPropietarioDNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTPropietarioDNIFocusGained(evt);
            }
        });
        jTPropietarioDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPropietarioDNIKeyReleased(evt);
            }
        });

        jTablaBusquedaPropietario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablaBusquedaPropietario);

        jTPropietarioNombre.setForeground(new java.awt.Color(204, 204, 204));
        jTPropietarioNombre.setText("Nombre");
        jTPropietarioNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTPropietarioNombreFocusGained(evt);
            }
        });
        jTPropietarioNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPropietarioNombreKeyReleased(evt);
            }
        });

        jTPropietarioApellido.setForeground(new java.awt.Color(204, 204, 204));
        jTPropietarioApellido.setText("Apellido");
        jTPropietarioApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTPropietarioApellidoFocusGained(evt);
            }
        });

        jTPropietarioDomicilio.setForeground(new java.awt.Color(204, 204, 204));
        jTPropietarioDomicilio.setText("Domicilio");

        jTPropietarioTelefono.setForeground(new java.awt.Color(204, 204, 204));
        jTPropietarioTelefono.setText("Teléfono");

        jbtAgregarProp.setText("Agregar");

        jbtModificarProp.setText("Modificar");

        jbtCancelarProp.setText("Cancelar");

        jlabelDNI.setFocusable(false);

        javax.swing.GroupLayout jPanelPropietarioLayout = new javax.swing.GroupLayout(jPanelPropietario);
        jPanelPropietario.setLayout(jPanelPropietarioLayout);
        jPanelPropietarioLayout.setHorizontalGroup(
            jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPropietarioLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelPropietarioLayout.createSequentialGroup()
                        .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPropietarioLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbtAgregarProp))
                            .addGroup(jPanelPropietarioLayout.createSequentialGroup()
                                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPropietarioLayout.createSequentialGroup()
                                        .addComponent(jlabelDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanelPropietarioLayout.createSequentialGroup()
                                        .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTPropietarioDomicilio, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTPropietarioDNI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTPropietarioNombre)
                                            .addComponent(jTPropietarioTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addComponent(jTPropietarioApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 72, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jbtModificarProp)
                        .addGap(18, 18, 18)
                        .addComponent(jbtCancelarProp)))
                .addContainerGap())
        );
        jPanelPropietarioLayout.setVerticalGroup(
            jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPropietarioLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTPropietarioDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPropietarioNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPropietarioApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlabelDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTPropietarioDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTPropietarioTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanelPropietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtAgregarProp)
                    .addComponent(jbtModificarProp)
                    .addComponent(jbtCancelarProp))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(303, 303, 303))
            .addComponent(jPanelPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTPropietarioDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPropietarioDNIKeyReleased
        // Pido el número de documetno para chequear que ya no exista. Si no existe lo puede agregar
        //String cadena=jTPropietrioDNI.getText();
        borroFilas();
        String chequeo=jTPropietarioDNI.getText();
        char[] armoDNI = chequeo.toCharArray();
        listado = abmPropietario.listarPropietario();

       //
        String chequeoError="";
        for (int i = 0; i < armoDNI.length; i++) {
            chequeoError = String.valueOf(armoDNI[i]).toLowerCase();
            if (!chequeoError.matches("[0-9]*")) {
                jlabelDNI.setEnabled(true);
                jlabelDNI.setForeground(Color.red.darker());
                jlabelDNI.setText("Solo números 0-9");
                break;
            } else {
                borroFilas();
                jlabelDNI.setEnabled(false);
                jlabelDNI.setText("");
                if (chequeo.isEmpty()) {
                    borroFilas();
                    camposIniciales();
                    jlabelDNI.setEnabled(false);
                } else {
                    borroFilas();
                    for (Propietario prop : listado) {
                        String propDNI = String.valueOf(prop.getDni());
                        if (propDNI.startsWith(chequeo)) {
                            modeloProp.addRow(new Object[]{prop.getIdPropietario(), prop.getNombre(), prop.getApellido(),
                                prop.getDni(), prop.getDomicilio(), prop.getDomicilio(), prop.getTelefono()});
                        }
                        if (modeloProp.getRowCount() == 0 && chequeo.length() >= 8) {
                            //El dni no existe por lo tatno puede agregar el propietario
                            jTPropietarioNombre.setEnabled(true);
                        }
                    }

                }
            }
        }


    }//GEN-LAST:event_jTPropietarioDNIKeyReleased

    private void jTPropietarioDNIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPropietarioDNIFocusGained
        // borro y configuro ek campo DNI
        if (jTPropietarioDNI.getText().isEmpty()) {
            jTPropietarioDNI.setText("Ingrese DNI");
            jTPropietarioDNI.setForeground(Color.gray);
            if (jTPropietarioNombre.isEnabled()) {
                jTPropietarioNombre.setEditable(false);
            }
        } else if(jTPropietarioDNI.getText().equals("Ingrese DNI")) {
            jTPropietarioDNI.selectAll();
            jTPropietarioDNI.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTPropietarioDNIFocusGained

    private void jTPropietarioNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPropietarioNombreFocusGained
        // chequeo que dni no este difícil
        if (jTPropietarioNombre.getText().isEmpty()) {
            jTPropietarioNombre.setText("Nombre");
            jTPropietarioNombre.setForeground(Color.gray);
            if (jTPropietarioApellido.isEnabled()) {
                jTPropietarioApellido.setEnabled(false);
            }
        } else if(jTPropietarioNombre.getText().equals("Nombre")){
            jTPropietarioNombre.selectAll();
            jTPropietarioNombre.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTPropietarioNombreFocusGained

    private void jTPropietarioNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPropietarioNombreKeyReleased
        // Mientras el campo no este vacío habilito el campo Apellido
        if(jTPropietarioNombre.getText().isEmpty()){
            jLabelNombre.setVisible(true);
            jLabelNombre.setForeground(Color.red.darker());
            jLabelNombre.setText("No puede estar vacío");
        }else{
            jTPropietarioApellido.setEnabled(true);
        }
    }//GEN-LAST:event_jTPropietarioNombreKeyReleased

    private void jTPropietarioApellidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPropietarioApellidoFocusGained
        // Mientras el campo apellido este vacío no habilito el campo Domicilio
        if(jTPropietarioApellido.getText().isEmpty()){
            
        }
    }//GEN-LAST:event_jTPropietarioApellidoFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JPanel jPanelPropietario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTPropietarioApellido;
    private javax.swing.JTextField jTPropietarioDNI;
    private javax.swing.JTextField jTPropietarioDomicilio;
    private javax.swing.JTextField jTPropietarioNombre;
    private javax.swing.JTextField jTPropietarioTelefono;
    private javax.swing.JTable jTablaBusquedaPropietario;
    private javax.swing.JButton jbtAgregarProp;
    private javax.swing.JButton jbtCancelarProp;
    private javax.swing.JButton jbtModificarProp;
    private javax.swing.JLabel jlabelDNI;
    // End of variables declaration//GEN-END:variables

    public void armarTabla() {
        modeloProp.addColumn("id");
        modeloProp.addColumn("Nombre");
        modeloProp.addColumn("Apellido");
        modeloProp.addColumn("DNI");
        modeloProp.addColumn("Dirección");
        modeloProp.addColumn("Telefono");
        jTablaBusquedaPropietario.setModel(modeloProp);
    }

    public void borroFilas() {
        int filas = modeloProp.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modeloProp.removeRow(i);
        }
    }
    
    public void etiquetasInicio(){
         jlabelDNI.setEnabled(false);
//         jlabelDNI.setVisible(false);
         jLabelNombre.setEnabled(false);
//         jLabelNombre.setVisible(false);
    }

    public void camposIniciales() {
        jbtAgregarProp.setEnabled(false);
        jbtModificarProp.setEnabled(false);
        jbtCancelarProp.setEnabled(false);
        jTPropietarioDomicilio.setEnabled(false);
        jTPropietarioNombre.setEnabled(false);
        jTPropietarioApellido.setEnabled(false);
        jTPropietarioTelefono.setEnabled(false);
    }

}
