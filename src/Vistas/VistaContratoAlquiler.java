package Vistas;

import AccesoDatos.ContratoAlquilerData;
import AccesoDatos.EstadoContratoData;
import AccesoDatos.InquilinoData;
import AccesoDatos.PropiedadData;
import AccesoDatos.TipoLocalData;
import AccesoDatos.VendedorData;
import Entidades.ContratoAlquiler;
import Entidades.EstadoContrato;
import Entidades.Inquilino;
import Entidades.PropiedadInmueble;
import Entidades.TipoLocal;
import Entidades.Vendedor;
import java.awt.Color;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalema
 */
public class VistaContratoAlquiler extends javax.swing.JInternalFrame {

    public DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private List<PropiedadInmueble> listaPropiedades = new ArrayList();
    private List<Inquilino> listaInqui = new ArrayList();
    private List<Vendedor> listaVend = new ArrayList();
    private List<EstadoContrato> listaEstCont = new ArrayList();
    private List<TipoLocal> listaTipoLocal = new ArrayList();
    private PropiedadInmueble lasProp = null;
    private Vendedor elVendedor = null;
    private Inquilino elInquilino = null;
    private ContratoAlquiler elContrato = null;
    private EstadoContrato elEstCont = null;
    private TipoLocal elTipoLocal = null;
    private PropiedadData abmPropiedadData = new PropiedadData();
    private ContratoAlquilerData abmContAlquiler = new ContratoAlquilerData();
    private VendedorData abmVend = new VendedorData();
    private InquilinoData abmInqui = new InquilinoData();
    private EstadoContratoData abmEstCont = new EstadoContratoData();
    private TipoLocalData abmTipoLocal = new TipoLocalData();
    private DefaultComboBoxModel modeloInquijcb = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloVen = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloEstCont = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloTipoLocal = new DefaultComboBoxModel();
    private int vendjcb = 0;

    /**
     * Creates new form ContratoAlquiler
     */
    public VistaContratoAlquiler() {
        initComponents();
        armoTablaProp();
        datosATabla();
        armoComboInqui();
        armoComboVend();
        armoComboEstCont();
        camposInicio();
        armoComoTipo();
        //this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanelInquilino = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanelContratoPropiedad = new javax.swing.JPanel();
        omitirEtiqueta2 = new javax.swing.JLabel();
        jcbInquilinoProp = new javax.swing.JComboBox<>();
        jEtiquetaIDCont = new javax.swing.JLabel();
        jDiaInicio = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta3 = new javax.swing.JLabel();
        omitirEtiqueta4 = new javax.swing.JLabel();
        jDiaFinal = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta5 = new javax.swing.JLabel();
        jDiaRealizado = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta6 = new javax.swing.JLabel();
        jcbComboVend = new javax.swing.JComboBox<>();
        omitirEtiqueta7 = new javax.swing.JLabel();
        jcbEstadoContrado = new javax.swing.JComboBox<>();
        jbtMoficarContrato = new javax.swing.JButton();
        lbtCancelarTodo = new javax.swing.JButton();
        jEtiquetaInicio = new javax.swing.JLabel();
        jcbTipoLocal = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jlOmitirIdProp = new javax.swing.JLabel();
        jlOmitirIdContrato = new javax.swing.JLabel();
        JEtiquetaIdProp = new javax.swing.JLabel();
        jEtiquetaTipoLocal = new javax.swing.JLabel();
        jEtiquetaVnededor = new javax.swing.JLabel();
        jEtiquetaEstadoContrato = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaSeleccionPropiedad = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPanelInquilino.setForeground(new java.awt.Color(153, 153, 153));

        jPanelContratoPropiedad.setBackground(new java.awt.Color(245, 232, 232));

        omitirEtiqueta2.setText("Inquilino");
        omitirEtiqueta2.setFocusable(false);

        jEtiquetaIDCont.setFocusable(false);

        jDiaInicio.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta3.setText("Fecha Inicio");
        omitirEtiqueta3.setFocusable(false);

        omitirEtiqueta4.setText("Fecha Final");
        omitirEtiqueta4.setFocusable(false);

        jDiaFinal.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta5.setText("Fecha Realizado");
        omitirEtiqueta5.setFocusable(false);

        jDiaRealizado.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta6.setText("Vendedor");
        omitirEtiqueta6.setFocusable(false);

        jcbComboVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbComboVendActionPerformed(evt);
            }
        });

        omitirEtiqueta7.setText("Est. Contrato");
        omitirEtiqueta7.setFocusable(false);

        jcbEstadoContrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoContradoActionPerformed(evt);
            }
        });

        jbtMoficarContrato.setText("Modificar");
        jbtMoficarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMoficarContratoActionPerformed(evt);
            }
        });

        lbtCancelarTodo.setText("Cancelar");
        lbtCancelarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbtCancelarTodoActionPerformed(evt);
            }
        });

        jcbTipoLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoLocalActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo Local");

        jlOmitirIdProp.setText("Id Propiedad");

        jlOmitirIdContrato.setText("Id Contrato");

        javax.swing.GroupLayout jPanelContratoPropiedadLayout = new javax.swing.GroupLayout(jPanelContratoPropiedad);
        jPanelContratoPropiedad.setLayout(jPanelContratoPropiedadLayout);
        jPanelContratoPropiedadLayout.setHorizontalGroup(
            jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                            .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jEtiquetaIDCont, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(jlOmitirIdContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jlOmitirIdProp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JEtiquetaIdProp, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                        .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                            .addComponent(omitirEtiqueta3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jEtiquetaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDiaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                        .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                            .addComponent(omitirEtiqueta6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jcbComboVend, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jEtiquetaVnededor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(omitirEtiqueta7)
                            .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(omitirEtiqueta2)
                                .addComponent(omitirEtiqueta4)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addComponent(jcbEstadoContrado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtMoficarContrato)
                                .addGap(18, 18, 18)
                                .addComponent(lbtCancelarTodo))
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jcbInquilinoProp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(omitirEtiqueta5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jDiaRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jEtiquetaTipoLocal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addComponent(jEtiquetaEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(418, 418, 418)))
                .addContainerGap())
        );
        jPanelContratoPropiedadLayout.setVerticalGroup(
            jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(omitirEtiqueta2)
                    .addComponent(jcbInquilinoProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEtiquetaIDCont, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(JEtiquetaIdProp, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlOmitirIdContrato)
                    .addComponent(jlOmitirIdProp)
                    .addComponent(jEtiquetaTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omitirEtiqueta3)
                    .addComponent(jDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omitirEtiqueta4)
                    .addComponent(jDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omitirEtiqueta5)
                    .addComponent(jDiaRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEtiquetaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtMoficarContrato)
                        .addComponent(lbtCancelarTodo))
                    .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(omitirEtiqueta6)
                        .addComponent(jcbComboVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(omitirEtiqueta7)
                        .addComponent(jcbEstadoContrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEtiquetaVnededor, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEtiquetaEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTablaSeleccionPropiedad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablaSeleccionPropiedad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaSeleccionPropiedadMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaSeleccionPropiedad);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addComponent(jPanelContratoPropiedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContratoPropiedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPanelInquilino.addTab("Contratos por Propiedad", jPanel2);

        jLabel1.setText("GESTIÓN DE CONTRATOS DE ALQUILER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanelInquilino)
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jTabbedPanelInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPanelInquilino.getAccessibleContext().setAccessibleName("separadorInquilino");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaSeleccionPropiedadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaSeleccionPropiedadMouseClicked
        // Cargo los datos de el contrato en los campos para la edición
        int valor = jTablaSeleccionPropiedad.getSelectedRow();
        int inquijcb = 0;
        String tomoInqui = String.valueOf(modelo.getValueAt(valor, 1));
        for (Inquilino unInqui : listaInqui) {
            if (unInqui.otraForma().equals(tomoInqui)) {
                inquijcb = unInqui.getIdInquilino() - 1;
            }
        }
        jcbInquilinoProp.setSelectedIndex(inquijcb);
        int tipolocaljcb = 0;
        String tomoTipoLocal = String.valueOf(modelo.getValueAt(valor, 2));
        for (TipoLocal tipoLocal : listaTipoLocal) {
            if (tipoLocal.getNombre().equals(tomoTipoLocal)) {
                tipolocaljcb = tipoLocal.getIdTipoLocal() - 1;
            }
        }
        jcbTipoLocal.setSelectedIndex(tipolocaljcb);
//        int vendjcb = 0;
        String tomoVend = String.valueOf(modelo.getValueAt(valor, 7));
        for (Vendedor esteVend : listaVend) {
            if (esteVend.toString().equals(tomoVend)) {
                vendjcb = esteVend.getIdVendedor() - 1;
            }
        }
        jcbComboVend.setSelectedIndex(vendjcb);
        int estContjcb = 0;
        String tomoEstCon = String.valueOf(modelo.getValueAt(valor, 8));
        for (EstadoContrato tomoEst : listaEstCont) {
            if (tomoEst.getNombre().equals(tomoEstCon)) {
                estContjcb = tomoEst.getIdEstadoContrato() - 1;
            }
        }
        jcbEstadoContrado.setSelectedIndex(estContjcb);
        jEtiquetaIDCont.setText(String.valueOf(modelo.getValueAt(valor, 0)));
        JEtiquetaIdProp.setText(String.valueOf(modelo.getValueAt(valor, 3)));
        String tomoFechaIni = String.valueOf(modelo.getValueAt(valor, 4));
        String tomoFechaFin = String.valueOf(modelo.getValueAt(valor, 5));
        String tomoFechaReali = String.valueOf(modelo.getValueAt(valor, 6));
        SimpleDateFormat formatoFech = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fechIni = formatoFech.parse(tomoFechaIni);
            Date fechFin = formatoFech.parse(tomoFechaFin);
            Date fechRea = formatoFech.parse(tomoFechaReali);
            jDiaInicio.setDate(fechIni);
            jDiaFinal.setDate(fechFin);
            jDiaRealizado.setDate(fechRea);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }
        habilitoCampos();
    }//GEN-LAST:event_jTablaSeleccionPropiedadMouseClicked

    private void lbtCancelarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbtCancelarTodoActionPerformed
        // Deshabilito todos los campos para obligar a elegir otra propiedad de la tabla
        camposInicio();
    }//GEN-LAST:event_lbtCancelarTodoActionPerformed

    private void jbtMoficarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMoficarContratoActionPerformed
        // Tomo los datos de los campos y actualizo la base
        borrarFilas();
        int elValorInqui = jcbInquilinoProp.getSelectedIndex() + 1;
        elInquilino = abmInqui.buscoInquilino(elValorInqui);
        //System.out.println("Muestro el valor de tomoVend "+vendjcb);
        Date fInicial = jDiaInicio.getDate();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String castIni = formato.format(fInicial);
        LocalDate fechaIni = LocalDate.parse(castIni);
        Date fFinal = jDiaFinal.getDate();
        String castFin = formato.format(fFinal);
        LocalDate fechaFin = LocalDate.parse(castFin);
        Date fRealizado = jDiaRealizado.getDate();
        String castReal = formato.format(fRealizado);
        LocalDate fechaReali = LocalDate.parse(castReal);
        //Evaluo las fechas para que sean concistentes 
        if (!fechaIni.isAfter(fechaFin) && !fechaIni.isAfter(fechaReali)) {
            if (!fechaFin.isAfter(fechaReali)) {
                JOptionPane.showMessageDialog(this, "La Fecha de finalización no puede ser\n posterior a la de Realización");
            } else {
                elInquilino = abmInqui.buscoInquilino(jcbInquilinoProp.getSelectedIndex() + 1);
                lasProp = abmPropiedadData.buscarPropiedadPorId(Integer.parseInt(JEtiquetaIdProp.getText()));
                elVendedor = abmVend.buscoVendedor(jcbComboVend.getSelectedIndex() + 1);
                elEstCont = abmEstCont.BuscarEstadoContratoPorId(jcbEstadoContrado.getSelectedIndex() + 1);

                //Construyo el Contrato Alquiler para actualizar
                elContrato = new ContratoAlquiler();
                elContrato.setIdContratoAlquiler(Integer.parseInt(jEtiquetaIDCont.getText()));
                elContrato.setInquilino(elInquilino);
                elContrato.setPropiedadInmueble(lasProp);
                elContrato.setFechaInicio(fechaIni);
                elContrato.setFechaFinal(fechaFin);
                elContrato.setFechaRealizacion(fechaReali);
                elContrato.getMarca();
                elContrato.setVendedor(elVendedor);
                elContrato.setEstado(elEstCont);
                abmContAlquiler.modificarContrato(elContrato);
                abmVend.actualizarCantidadVentas(elVendedor.getIdVendedor());
                abmVend.actualizarCantidadVentas(vendjcb);
            }

            datosATabla();
        } else {
            JOptionPane.showMessageDialog(this, "La fecha de Inicio no puede ser posterior\n a la de "
                    + "Finalzación o Realización ");
        }
    }//GEN-LAST:event_jbtMoficarContratoActionPerformed

    private void jcbTipoLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoLocalActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if (jcbTipoLocal.getSelectedIndex() == 0) {
            jEtiquetaTipoLocal.setText("Debe seleccionar una opción");
            jEtiquetaTipoLocal.setFont(new Font("LiberationSans", Font.PLAIN, 13));
            jEtiquetaTipoLocal.setForeground(Color.red.darker());
            jcbInquilinoProp.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jcbComboVend.setEnabled(false);
            jcbEstadoContrado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);

        } else {
            jEtiquetaTipoLocal.setText("");
            jcbInquilinoProp.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jcbComboVend.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbTipoLocalActionPerformed

    private void jcbComboVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbComboVendActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if (jcbComboVend.getSelectedIndex() == 0) {
            jEtiquetaVnededor.setText("Debe seleccionar una opción");
            jEtiquetaVnededor.setFont(new Font("Liberation Sans",Font.PLAIN,13));
            jEtiquetaVnededor.setForeground(Color.red.darker());
            jcbInquilinoProp.setEnabled(false);
            jcbTipoLocal.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jcbEstadoContrado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);
        } else {
            jEtiquetaVnededor.setText("");
            jcbInquilinoProp.setEnabled(true);
            jcbTipoLocal.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbComboVendActionPerformed

    private void jcbEstadoContradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoContradoActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if(jcbEstadoContrado.getSelectedIndex()==0){
            jEtiquetaEstadoContrato.setText("Debe seleccionar una opción");
            jEtiquetaEstadoContrato.setFont(new Font("Liberation Sans",Font.PLAIN,13));
            jEtiquetaEstadoContrato.setForeground(Color.red.darker());
            jcbInquilinoProp.setEnabled(false);
            jcbTipoLocal.setEnabled(false);
            jcbComboVend.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);
        } else {
            jEtiquetaEstadoContrato.setText("");
            jcbInquilinoProp.setEnabled(true);
            jcbTipoLocal.setEnabled(true);
            jcbComboVend.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbEstadoContradoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JEtiquetaIdProp;
    private com.toedter.calendar.JDateChooser jDiaFinal;
    private com.toedter.calendar.JDateChooser jDiaInicio;
    private com.toedter.calendar.JDateChooser jDiaRealizado;
    private javax.swing.JLabel jEtiquetaEstadoContrato;
    private javax.swing.JLabel jEtiquetaIDCont;
    private javax.swing.JLabel jEtiquetaInicio;
    private javax.swing.JLabel jEtiquetaTipoLocal;
    private javax.swing.JLabel jEtiquetaVnededor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelContratoPropiedad;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPanelInquilino;
    private javax.swing.JTable jTablaSeleccionPropiedad;
    private javax.swing.JButton jbtMoficarContrato;
    private javax.swing.JComboBox<String> jcbComboVend;
    private javax.swing.JComboBox<String> jcbEstadoContrado;
    private javax.swing.JComboBox<String> jcbInquilinoProp;
    private javax.swing.JComboBox<String> jcbTipoLocal;
    private javax.swing.JLabel jlOmitirIdContrato;
    private javax.swing.JLabel jlOmitirIdProp;
    private javax.swing.JButton lbtCancelarTodo;
    private javax.swing.JLabel omitirEtiqueta2;
    private javax.swing.JLabel omitirEtiqueta3;
    private javax.swing.JLabel omitirEtiqueta4;
    private javax.swing.JLabel omitirEtiqueta5;
    private javax.swing.JLabel omitirEtiqueta6;
    private javax.swing.JLabel omitirEtiqueta7;
    // End of variables declaration//GEN-END:variables

    private void cargoPropiedades() {
        listaPropiedades = abmPropiedadData.buscarPropiedad();
        for (PropiedadInmueble prop : listaPropiedades) {

        }
    }

    private void armoTablaProp() {
        modelo.addColumn("ID Contrato"); //0
        modelo.addColumn("Inquilino");  //1
        modelo.addColumn("Tipo Local"); //2
        modelo.addColumn("Id Propiedad");   //3
        modelo.addColumn("Fecha de Inicio");    //4
        modelo.addColumn("Fecha Final");    //5
        modelo.addColumn("Fecha Realización");  //6
        modelo.addColumn("Vendedor");   //7
        modelo.addColumn("Estado Contrato");    //8
        jTablaSeleccionPropiedad.setModel(modelo);
    }

    private void datosATabla() {
        List<ContratoAlquiler> listar = new ArrayList();
        listar = abmContAlquiler.listarContrato();

        for (ContratoAlquiler cont : listar) {
            //elInquilino = abmInqui.buscoInquilino(con)
            modelo.addRow(new Object[]{cont.getIdContratoAlquiler(), cont.getInquilino().otraForma(),
                cont.getPropiedadInmueble().getTipoLocal().getNombre(), cont.getPropiedadInmueble().getIdPropiedadInmueble(),
                cont.getFechaInicio(), cont.getFechaFinal(), cont.getFechaRealizacion(), cont.getVendedor().toString(),
                cont.getEstado().getNombre()});
        }
    }

    private void borrarFilas() {
        int f = modelo.getRowCount() - 1;
        for (int i = f; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void armoComboInqui() {
        listaInqui = abmInqui.listarInquilino();
        for (Inquilino inqui : listaInqui) {
            modeloInquijcb.addElement(inqui.otraForma());
        }
        jcbInquilinoProp.setModel(modeloInquijcb);
    }

    private void armoComoTipo() {
        listaTipoLocal = abmTipoLocal.listarTipoLocal();
        for (TipoLocal tipoLocal : listaTipoLocal) {
            modeloTipoLocal.addElement(tipoLocal.getNombre());
        }
        jcbTipoLocal.setModel(modeloTipoLocal);
    }

    private void armoComboVend() {
        listaVend = abmVend.listadoVendedorOriginal();
        for (Vendedor unVend : listaVend) {
            modeloVen.addElement(unVend.toString());
        }
        jcbComboVend.setModel(modeloVen);
    }

    private void armoComboEstCont() {
        listaEstCont = abmEstCont.listarEstadoContratos();
        for (EstadoContrato unEst : listaEstCont) {
            modeloEstCont.addElement(unEst.getNombre());
        }
        jcbEstadoContrado.setModel(modeloEstCont);
    }

    private void camposInicio() {
        jcbInquilinoProp.setEnabled(false);
        jcbTipoLocal.setEnabled(false);
        jcbComboVend.setEnabled(false);
        jcbEstadoContrado.setEnabled(false);
        jDiaInicio.setEnabled(false);
        jDiaFinal.setEnabled(false);
        jDiaRealizado.setEnabled(false);
        jbtMoficarContrato.setEnabled(false);
    }

    private void habilitoCampos() {
        jcbInquilinoProp.setEnabled(true);
        jcbTipoLocal.setEnabled(true);
        jcbComboVend.setEnabled(true);
        jcbEstadoContrado.setEnabled(true);
        jDiaInicio.setEnabled(true);
        jDiaFinal.setEnabled(true);
        jDiaRealizado.setEnabled(true);
        jbtMoficarContrato.setEnabled(true);
    }
}
