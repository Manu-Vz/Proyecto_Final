/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoDatos.InquilinoData;
import Entidades.Inquilino;
import java.awt.Color;
import java.awt.Point;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author manuv
 */
public class GestionInquilinos extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionInquilinos
     */
    public GestionInquilinos() {
        initComponents();
        camposIniciales();
    }

    int cadenaCuit = 0;
    String cadenaCuitString;
    
    int cadenaDni = 0;
    String cadenaDniString;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreInquilino = new javax.swing.JTextField();
        apellido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cuitInquilino = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lugarDeTrabajoInquilino = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dnigaranteInquilino = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombreGaranteInquilino = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        AgregarInquilino = new javax.swing.JButton();
        mensajeError = new javax.swing.JLabel();

        nombreInquilino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombreInquilinoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreInquilinoFocusLost(evt);
            }
        });
        nombreInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreInquilinoKeyReleased(evt);
            }
        });

        apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                apellidoKeyReleased(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Apeliido:");

        cuitInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cuitInquilinoKeyReleased(evt);
            }
        });

        jLabel3.setText("CUIT:");

        lugarDeTrabajoInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lugarDeTrabajoInquilinoKeyReleased(evt);
            }
        });

        jLabel4.setText("Lugar de Trabajo:");

        dnigaranteInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dnigaranteInquilinoKeyReleased(evt);
            }
        });

        jLabel5.setText("DNI garante:");

        nombreGaranteInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreGaranteInquilinoKeyReleased(evt);
            }
        });

        jLabel6.setText("Nombre Garante");

        AgregarInquilino.setText("Agregar Inquilino");
        AgregarInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarInquilinoActionPerformed(evt);
            }
        });

        mensajeError.setText("Este campo no puede estar vacio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lugarDeTrabajoInquilino, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(nombreInquilino)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(nombreGaranteInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addComponent(jLabel2)
                                        .addGap(87, 87, 87))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dnigaranteInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addGap(6, 6, 6)))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cuitInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addComponent(mensajeError)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(AgregarInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cuitInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensajeError)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lugarDeTrabajoInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dnigaranteInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreGaranteInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(AgregarInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarInquilinoActionPerformed
        // TODO add your handling code here:
        Inquilino nuevo = new Inquilino();
        boolean condicion = true;
        if(apellido.isEnabled() && cuitInquilino.isEnabled() && 
                lugarDeTrabajoInquilino.isEnabled() && 
                dnigaranteInquilino.isEnabled() && nombreGaranteInquilino.isEnabled()){
            nuevo.setNombre(nombreInquilino.getText());
            nuevo.setApellido(apellido.getText());
            if (confirmarCadenaSiEsNumero(cuitInquilino.getText())){
                nuevo.setCuit(cuitInquilino.getText());
            } else {
                condicion = false;
                JOptionPane.showMessageDialog(null, "El CUIT debe contener solo numeros");
            }
            if (confirmarCadenaSiEsNumero(dnigaranteInquilino.getText())){
                nuevo.setDniGarante(parseInt(dnigaranteInquilino.getText()));
            } else {
                condicion = false;
                JOptionPane.showMessageDialog(null, "El DNI del garante debe contener solo numeros");
            }
            nuevo.setLugarTrabajo(lugarDeTrabajoInquilino.getText());
            nuevo.setNombreGarante(nombreGaranteInquilino.getText());
            
            if (condicion){
                InquilinoData ID = new InquilinoData();
                ID.guardarInquilino(nuevo);
            }
            
            
        } else {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar completos");
        }
        
        
    }//GEN-LAST:event_AgregarInquilinoActionPerformed

    private void nombreInquilinoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreInquilinoFocusGained
        // TODO add your handling code here:    
    }//GEN-LAST:event_nombreInquilinoFocusGained

    private void nombreInquilinoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreInquilinoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreInquilinoFocusLost

    private void nombreInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreInquilinoKeyReleased
        // TODO add your handling code here:
        if(nombreInquilino.getText().isEmpty()){
            int y = nombreInquilino.getY();
            int x = nombreInquilino.getX();
            mensajeError.setLocation(x, y-15);
            mensajeError.setVisible(true);
            apellido.setEnabled(false);
        } else {
            mensajeError.setVisible(false);
            apellido.setEnabled(true);
        }
    }//GEN-LAST:event_nombreInquilinoKeyReleased

    private void apellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoKeyReleased
        // TODO add your handling code here:
        if(apellido.getText().isEmpty()){
            int y = apellido.getY();
            int x = apellido.getX();
            mensajeError.setLocation(x, y-15);
            mensajeError.setVisible(true);
            cuitInquilino.setEnabled(false);
        } else {
            mensajeError.setVisible(false);
            cuitInquilino.setEnabled(true);
        }
    }//GEN-LAST:event_apellidoKeyReleased

    private void cuitInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cuitInquilinoKeyReleased
        // TODO add your handling code here:
        if(cuitInquilino.getText().isEmpty()){
            int y = cuitInquilino.getY();
            int x = cuitInquilino.getX();
            mensajeError.setLocation(x, y);
            mensajeError.setVisible(true);
            lugarDeTrabajoInquilino.setEnabled(false);
        } else {
            String cadena = cuitInquilino.getText();
            String chequeo = String.valueOf(cadena.charAt(cadenaCuit));
            if (chequeo.equals("0") || chequeo.equals("6") || chequeo.equals("8") || 
                chequeo.equals("9") || chequeo.equals("1") || chequeo.equals("2") || 
                chequeo.equals("3") || chequeo.equals("4") || chequeo.equals("5") ||  
                chequeo.equals("7")) {
                cadenaCuit = cadenaCuit+1;
                cadenaCuitString = cadena;
                lugarDeTrabajoInquilino.setEnabled(true);
            } else {
                cuitInquilino.setText(cadenaCuitString);
            }
        }
    }//GEN-LAST:event_cuitInquilinoKeyReleased

    private void lugarDeTrabajoInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lugarDeTrabajoInquilinoKeyReleased
        // TODO add your handling code here:
        if(lugarDeTrabajoInquilino.getText().isEmpty()){
            mensajeError.setVisible(true);
            dnigaranteInquilino.setEnabled(false);
        } else {
            mensajeError.setVisible(false);
            dnigaranteInquilino.setEnabled(true);
        }
    }//GEN-LAST:event_lugarDeTrabajoInquilinoKeyReleased

    private void dnigaranteInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnigaranteInquilinoKeyReleased
        // TODO add your handling code here:
        if(dnigaranteInquilino.getText().isEmpty()){
            int y = dnigaranteInquilino.getY();
            int x = dnigaranteInquilino.getX();
            mensajeError.setLocation(x, y-15);
            mensajeError.setVisible(true);
            nombreGaranteInquilino.setEnabled(false);
        } else {
            String cadena = dnigaranteInquilino.getText();
            String chequeo = String.valueOf(cadena.charAt(cadenaDni));
            if (chequeo.matches("[0-9]*") && cadenaDni < 7) {
                cadenaDni = cadenaDni+1;
                cadenaDniString = cadena;
                nombreGaranteInquilino.setEnabled(true);
            } else {
                dnigaranteInquilino.setText(cadenaDniString);
            }
        }
    }//GEN-LAST:event_dnigaranteInquilinoKeyReleased

    private void nombreGaranteInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreGaranteInquilinoKeyReleased
        // TODO add your handling code here:
        if(nombreGaranteInquilino.getText().isEmpty()){
            mensajeError.setVisible(true);
            AgregarInquilino.setEnabled(false);
        } else {
            mensajeError.setVisible(false);
            AgregarInquilino.setEnabled(true);
        }
    }//GEN-LAST:event_nombreGaranteInquilinoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarInquilino;
    private javax.swing.JTextField apellido;
    private javax.swing.JTextField cuitInquilino;
    private javax.swing.JTextField dnigaranteInquilino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField lugarDeTrabajoInquilino;
    private javax.swing.JLabel mensajeError;
    private javax.swing.JTextField nombreGaranteInquilino;
    private javax.swing.JTextField nombreInquilino;
    // End of variables declaration//GEN-END:variables

    private void camposIniciales() {
        nombreInquilino.setEnabled(true);
        apellido.setEnabled(false);
        cuitInquilino.setEnabled(false);
        lugarDeTrabajoInquilino.setEnabled(false);
        dnigaranteInquilino.setEnabled(false);
        nombreGaranteInquilino.setEnabled(false);
        AgregarInquilino.setEnabled(false);
        mensajeError.setForeground(Color.RED);
        mensajeError.setVisible(false);
                
    }
    
    public boolean confirmarCadenaSiEsNumero (String cadena){
        boolean resultado = true;
        
        char[] armoCadena = cadena.toCharArray();
        String chequeoError = "";
        for (int i = 0; i < armoCadena.length; i++) {
                chequeoError = String.valueOf(armoCadena[i]).toLowerCase();
                if (!chequeoError.matches("[0-9]*")) {
                    resultado = false;
                }
        }
        return resultado;
    }
}
